{"uid":"20d5c40b1d8d24e7","name":"test03","fullName":"test1.TestClass#test03","historyId":"d01f996fe89f8704239db7b8fb3bef1a","time":{"start":1669172338729,"stop":1669172338867,"duration":138},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <scripts.test1.TestClass object at 0x7fda37cf07c0>\n\n    def test03(self):\n        res003 = dispatch_files()\n>       assert res003.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntest1.py:26: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"init","time":{"start":1669172337893,"stop":1669172338197,"duration":304},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code","statusTrace":"self = <scripts.test1.TestClass object at 0x7fda37cf07c0>\n\n    def test03(self):\n        res003 = dispatch_files()\n>       assert res003.status_code == 200\nE       assert 400 == 200\nE        +  where 400 = <Response [400]>.status_code\n\ntest1.py:26: AssertionError","steps":[],"attachments":[{"uid":"bc0e1eb48fc9288b","name":"stdout","source":"bc0e1eb48fc9288b.txt","type":"text/plain","size":74}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('init')"},{"name":"suite","value":"test1"},{"name":"subSuite","value":"TestClass"},{"name":"host","value":"jiahandeMacBook-Pro.local"},{"name":"thread","value":"5006-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test1"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('init')"]},"source":"20d5c40b1d8d24e7.json","parameterValues":[]}