{"uid":"e96c485bff148c3e","name":"test_case012","fullName":"test1.TestClass#test_case012","historyId":"d2157e7ea9398a06d7787e6028161cb1","time":{"start":1669172378034,"stop":1669172378036,"duration":2},"status":"broken","statusMessage":"KeyError: 'id'","statusTrace":"file = 'data_infor', data = ('id',), bath = '/Users/jiahan/Desktop/TXT_interface/logic/files/{}.json'\nf_w = <_io.TextIOWrapper name='/Users/jiahan/Desktop/TXT_interface/logic/files/data_infor.json' mode='r+' encoding='utf-8'>, data_json = {}\n\n    def extract_data (file,*data):\n        bath = app.base_dir + '/files/{}.json'\n        with open(bath.format(file), 'r+', encoding='utf-8') as f_w:\n            data_json={}\n            res_json=json.loads(f_w.read())\n            try:\n    \n                for i in data:\n>                   if res_json.get(i) ==None:\nE                   AttributeError: 'list' object has no attribute 'get'\n\n../file_operate.py:91: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <scripts.test1.TestClass object at 0x7fda37cf1540>\n\n    def test_case012(self):\n>       res012 = dataset_training_files()\n\ntest1.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest05_datasets.py:165: in dataset_training_files\n    res_dataset_training_files=data.datasetfiles({'dataset':file_operate.extract_data(data_infor ,'id').get('id'),'training_files':str(file_id_list)})\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfile = 'data_infor', data = ('id',), bath = '/Users/jiahan/Desktop/TXT_interface/logic/files/{}.json'\nf_w = <_io.TextIOWrapper name='/Users/jiahan/Desktop/TXT_interface/logic/files/data_infor.json' mode='r+' encoding='utf-8'>, data_json = {}\n\n    def extract_data (file,*data):\n        bath = app.base_dir + '/files/{}.json'\n        with open(bath.format(file), 'r+', encoding='utf-8') as f_w:\n            data_json={}\n            res_json=json.loads(f_w.read())\n            try:\n    \n                for i in data:\n                    if res_json.get(i) ==None:\n                        print(\"未获取到值：\",i)\n    \n                    data_json[i]=res_json.get(i)\n                    #\n            except:\n                for i_res in res_json:\n                    for i_data in data:\n>                       if i_res[i_data]==None:\nE                       KeyError: 'id'\n\n../file_operate.py:99: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"init","time":{"start":1669172337893,"stop":1669172338197,"duration":304},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"KeyError: 'id'","statusTrace":"file = 'data_infor', data = ('id',), bath = '/Users/jiahan/Desktop/TXT_interface/logic/files/{}.json'\nf_w = <_io.TextIOWrapper name='/Users/jiahan/Desktop/TXT_interface/logic/files/data_infor.json' mode='r+' encoding='utf-8'>, data_json = {}\n\n    def extract_data (file,*data):\n        bath = app.base_dir + '/files/{}.json'\n        with open(bath.format(file), 'r+', encoding='utf-8') as f_w:\n            data_json={}\n            res_json=json.loads(f_w.read())\n            try:\n    \n                for i in data:\n>                   if res_json.get(i) ==None:\nE                   AttributeError: 'list' object has no attribute 'get'\n\n../file_operate.py:91: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <scripts.test1.TestClass object at 0x7fda37cf1540>\n\n    def test_case012(self):\n>       res012 = dataset_training_files()\n\ntest1.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest05_datasets.py:165: in dataset_training_files\n    res_dataset_training_files=data.datasetfiles({'dataset':file_operate.extract_data(data_infor ,'id').get('id'),'training_files':str(file_id_list)})\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfile = 'data_infor', data = ('id',), bath = '/Users/jiahan/Desktop/TXT_interface/logic/files/{}.json'\nf_w = <_io.TextIOWrapper name='/Users/jiahan/Desktop/TXT_interface/logic/files/data_infor.json' mode='r+' encoding='utf-8'>, data_json = {}\n\n    def extract_data (file,*data):\n        bath = app.base_dir + '/files/{}.json'\n        with open(bath.format(file), 'r+', encoding='utf-8') as f_w:\n            data_json={}\n            res_json=json.loads(f_w.read())\n            try:\n    \n                for i in data:\n                    if res_json.get(i) ==None:\n                        print(\"未获取到值：\",i)\n    \n                    data_json[i]=res_json.get(i)\n                    #\n            except:\n                for i_res in res_json:\n                    for i_data in data:\n>                       if i_res[i_data]==None:\nE                       KeyError: 'id'\n\n../file_operate.py:99: KeyError","steps":[],"attachments":[{"uid":"4a5c03c88f86bc05","name":"stdout","source":"4a5c03c88f86bc05.txt","type":"text/plain","size":1857}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('init')"},{"name":"suite","value":"test1"},{"name":"subSuite","value":"TestClass"},{"name":"host","value":"jiahandeMacBook-Pro.local"},{"name":"thread","value":"5006-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test1"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('init')"]},"source":"e96c485bff148c3e.json","parameterValues":[]}